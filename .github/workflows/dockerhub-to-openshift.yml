# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# üíÅ The OpenShift Starter workflow will:
# - Checkout your repository
# - Perform a container image build
# - Push the built image to the GitHub Container Registry (GHCR)
# - Log in to your OpenShift cluster
# - Create an OpenShift app from the image and expose it to the internet

# ‚ÑπÔ∏è Configure your repository and the workflow with the following steps:
# 1. Have access to an OpenShift cluster. Refer to https://www.openshift.com/try
# 2. Create the OPENSHIFT_SERVER and OPENSHIFT_TOKEN repository secrets. Refer to:
#   - https://github.com/redhat-actions/oc-login#readme
#   - https://docs.github.com/en/actions/reference/encrypted-secrets
#   - https://cli.github.com/manual/gh_secret_set
# 3. (Optional) Edit the top-level 'env' section as marked with 'üñäÔ∏è' if the defaults are not suitable for your project.
# 4. (Optional) Edit the build-image step to build your project.
#    The default build type is by using a Dockerfile at the root of the repository,
#    but can be replaced with a different file, a source-to-image build, or a step-by-step buildah build.
# 5. Commit and push the workflow file to your default branch to trigger a workflow run.

# üëã Visit our GitHub organization at https://github.com/redhat-actions/ to see our actions and provide feedback.

# name: OpenShift

# env:
#   # üñäÔ∏è EDIT your repository secrets to log into your OpenShift cluster and set up the context.
#   # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
#   # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
#   OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
#   OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
#   # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
#   OPENSHIFT_NAMESPACE: "flight-management"

#   # üñäÔ∏è EDIT to set a name for your OpenShift app, or a default one will be generated below.
#   APP_NAME: "FlightManagement-Prod"

#   # üñäÔ∏è EDIT with the port your application should be accessible on.
#   # If the container image exposes *exactly one* port, this can be left blank.
#   # Refer to the 'port' input of https://github.com/redhat-actions/oc-new-app
#   APP_PORT: "80:80"

#   # üñäÔ∏è EDIT to change the image registry settings.
#   # Registries such as GHCR, Quay.io, and Docker Hub are supported.
#   #IMAGE_REGISTRY: hub.docker.com/repository/docker/${{ github.repository_owner }}
#   IMAGE_REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
#   IMAGE_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

#   # üñäÔ∏è EDIT to specify custom tags for the container image, or default tags will be generated below.
#   IMAGE_TAGS: "dev"

# on:
#   # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
#   workflow_dispatch:
#   push:
#     # Edit to the branch(es) you want to build and deploy on each push.
#     branches: [ "feat/deploy-to-dev-env" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Checkout
#         uses: actions/checkout@v4      
      
name: DockerHub

env:
  APP_NAME: "FlightManagement-Dev"
  APP_PORT: "80:80"
  IMAGE_REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_TAGS: "dev"

on:
  workflow_dispatch:
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ "feat/deploy-to-dev-env" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4      
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Compose Up
        uses: isbang/compose-action@v1.5.1
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest